{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"remove",
				"remove(const QString &s)	QString &"
			],
			[
				"siz",
				"resize(int size)	void"
			],
			[
				"Key_ba",
				"Key_Backspace	Qt::Key"
			],
			[
				"addI",
				"addItem(QListWidgetItem *item)	void"
			],
			[
				"cur",
				"cursorPosition() const	int"
			],
			[
				"value",
				"setValue(const QString &key, const QVariant &value)	void"
			],
			[
				"x",
				"x() const	int"
			],
			[
				"to",
				"toTime_t() const	uint"
			],
			[
				"QABstrac",
				"QAbstractTableModel	class"
			],
			[
				"download",
				"download_nzb_contents(quint32 acc, const QString &path, const QString &desc, const std::vector<const nzbcontent *> &nzb)	bool"
			],
			[
				"temp",
				"tempPath()	QString"
			],
			[
				"filetyp",
				"find_filetype(const QString &filename)	app::filetype"
			],
			[
				"fromUtf",
				"fromUtf8(const char *)	QString"
			],
			[
				"chk",
				"chkRemoveComplete	QCheckBox *"
			],
			[
				"addAc",
				"addAction(const QIcon &icon, const QString &text)	QAction *"
			],
			[
				"save_",
				"select_nzb_save_file(const QString &filename)	QString"
			],
			[
				"setTab",
				"setTabPosition(QTabWidget::TabPosition)	void"
			],
			[
				"find",
				"findChildren<typename T>(const QRegExp &re) const	QList<T>"
			],
			[
				"ho",
				"homePath()	QString"
			],
			[
				"ret",
				"result() const	int"
			],
			[
				"Er",
				"NetworkError	enum"
			],
			[
				"initi",
				"initializer_list<class _E>	class"
			],
			[
				"sub",
				"submit(std::function<void ()> work, tid_t key)	void"
			],
			[
				"ch",
				"chkRemoveComplete	QCheckBox *"
			],
			[
				"move_if",
				"move(_II __first, _II __last, _OI __result)	_OI"
			],
			[
				"toL",
				"toULongLong() const	qulonglong"
			],
			[
				"toLo",
				"toLongLong() const	qlonglong"
			],
			[
				"setModel",
				"setModel(QAbstractItemModel *model)	void"
			],
			[
				"COMPLER",
				"COMPILER_VERSION	macro"
			],
			[
				"N",
				"NEWSFLASH_INSTALL_REL"
			],
			[
				"windowIcon",
				"QWidget::windowIcon() const	QIcon"
			],
			[
				"p",
				"absolutePath() const	QString"
			],
			[
				"repla",
				"replace(const QString &before, const QString &after)	QString &"
			],
			[
				"wr",
				"write(const QByteArray &data)	qint64"
			],
			[
				"abs",
				"abs(int __x)	int"
			],
			[
				"open",
				"open(OpenMode flags)	bool"
			],
			[
				"LI",
				"LICENSE_PAR2"
			],
			[
				"NE",
				"NEWSFLASH_INSTALL_REL"
			]
		]
	},
	"buffers":
	[
		{
			"file": "mainwindow.h",
			"settings":
			{
				"buffer_size": 2263,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dictionary.h",
			"settings":
			{
				"buffer_size": 2701,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dlgdictionary.h",
			"settings":
			{
				"buffer_size": 1984,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dictionary.cpp",
			"settings":
			{
				"buffer_size": 4513,
				"line_ending": "Unix"
			}
		},
		{
			"file": "mainwindow.cpp",
			"settings":
			{
				"buffer_size": 6486,
				"line_ending": "Unix"
			}
		},
		{
			"file": "resource.qrc",
			"settings":
			{
				"buffer_size": 317,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dlgdictionary.cpp",
			"settings":
			{
				"buffer_size": 6310,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 375.0,
		"selected_items":
		[
			[
				"comment",
				"Toggle Comment"
			],
			[
				"copy",
				"Snippet: copyright"
			],
			[
				"clear",
				"SublimeClang: Clear cache"
			],
			[
				"cop",
				"Snippet: copyright"
			],
			[
				"copyright",
				"Snippet: copyright"
			],
			[
				"coment",
				"Toggle Comment"
			],
			[
				"commen",
				"Toggle Comment"
			],
			[
				"coyp",
				"Package Control: Create Binary Package File"
			],
			[
				"comm",
				"Toggle Comment"
			],
			[
				"COMMENT",
				"Toggle Comment"
			],
			[
				"snip",
				"Snippet: copyright"
			],
			[
				"clea",
				"SublimeClang: Clear cache"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"sub",
				"SublimeClang: Clear cache"
			],
			[
				"cle",
				"SublimeClang: Clear cache"
			],
			[
				"sni",
				"Snippet: copyright"
			],
			[
				"subli",
				"SublimeClang: Clear cache"
			],
			[
				"commen t",
				"Toggle Comment"
			],
			[
				"coy",
				"Snippet: copyright"
			],
			[
				"s",
				"Snippet: copyright"
			],
			[
				"lo",
				"Convert Case: Lower Case"
			],
			[
				"indent",
				"Indentation: Reindent Lines"
			],
			[
				"lowe",
				"Convert Case: Lower Case"
			],
			[
				"enu",
				"Snippet: Enumeration"
			],
			[
				"rein",
				"Indentation: Reindent Lines"
			],
			[
				"wr",
				"Word Wrap: Toggle"
			],
			[
				"snippet c",
				"Snippet: copyright"
			],
			[
				"low",
				"Convert Case: Lower Case"
			],
			[
				"cl",
				"SublimeClang: Clear cache"
			],
			[
				"w",
				"Word Wrap: Toggle"
			],
			[
				"wra",
				"Word Wrap: Toggle"
			],
			[
				"WR",
				"Word Wrap: Toggle"
			],
			[
				"inden",
				"Indentation: Reindent Lines"
			],
			[
				"cear",
				"SublimeClang: Clear cache"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"comment	",
				"Toggle Comment"
			],
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 579.0
	},
	"console":
	{
		"height": 125.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"//home/samiv/coding/pinyin-translator/dlgword.h",
		"//home/samiv/coding/pinyin-translator/dlgdictionary.h",
		"//home/samiv/coding/pinyin-translator/resource.qrc",
		"//home/samiv/coding/pinyin-translator/Jamfile",
		"//home/samiv/coding/pinyin-translator/pime.sublime-project",
		"//home/samiv/coding/pime/tokenizer.h",
		"//home/samiv/coding/pime/translator.h",
		"//home/samiv/coding/pime/dlgword.h",
		"//home/samiv/coding/pime/warnpush.h",
		"//home/samiv/coding/pime/dictionary.cpp",
		"//home/samiv/coding/pime/dictionary.h",
		"//home/samiv/coding/qt-4.8.2/include/QtCore/qsharedpointer_impl.h",
		"//home/samiv/coding/pime/config.h",
		"//home/samiv/coding/pime/Jamfile",
		"//home/samiv/coding/pime/main.cpp",
		"//home/samiv/coding/pime/resource.qrc",
		"//home/samiv/coding/pime/warnpop.h",
		"//home/samiv/coding/newsflash/config.h",
		"//home/samiv/coding/newsflash/app/gui/toolsmodule.h",
		"//home/samiv/coding/newsflash/app/gui/toolsmodule.cpp",
		"//home/samiv/coding/newsflash/engine/download.cpp",
		"//home/samiv/coding/newsflash/app/gui/files.cpp",
		"//home/samiv/coding/newsflash/app/gui/mainmodule.h",
		"//home/samiv/coding/newsflash/engine/ui/file.h",
		"//home/samiv/coding/newsflash/app/platform.h",
		"//home/samiv/coding/newsflash/app/files.h",
		"//home/samiv/coding/newsflash/app/files.cpp",
		"//home/samiv/coding/newsflash/engine/engine.cpp",
		"//home/samiv/coding/newsflash/app/rss.cpp",
		"//home/samiv/coding/newsflash/engine/session.h",
		"//home/samiv/coding/newsflash/engine/ui/batch.h",
		"//home/samiv/coding/newsflash/app/gui/mainwindow.cpp",
		"//home/samiv/coding/newsflash/app/gui/rss.h",
		"//home/samiv/coding/newsflash/app/rss.h",
		"//home/samiv/coding/newsflash/app/gui/rss.cpp",
		"//home/samiv/coding/newsflash/app/tasklist.cpp",
		"//home/samiv/coding/newsflash/app/gui/resource.qrc",
		"//home/samiv/coding/newsflash/app/format.cpp",
		"//home/samiv/coding/newsflash/engine/download.h",
		"//home/samiv/coding/newsflash/app/format.h",
		"//home/samiv/coding/newsflash/app/filetype.h",
		"//home/samiv/coding/newsflash/app/engine.cpp",
		"//home/samiv/coding/newsflash/app/homedir.cpp",
		"//home/samiv/coding/newsflash/engine/session.cpp",
		"//home/samiv/coding/newsflash/app/gui/dlgfeedback.cpp",
		"//home/samiv/coding/newsflash/app/gui/accounts.h",
		"//home/samiv/coding/newsflash/app/gui/accounts.cpp",
		"//home/samiv/coding/newsflash/app/filetype.cpp",
		"//home/samiv/coding/newsflash/engine/logging.h",
		"//home/samiv/coding/newsflash/app/gui/downloads.cpp",
		"//home/samiv/coding/newsflash/engine/bigfile.cpp",
		"//home/samiv/coding/newsflash/app/gui/mainwidget.h",
		"//home/samiv/coding/newsflash/app/gui/files.h",
		"//home/samiv/coding/newsflash/newsflash.sublime-project",
		"//home/samiv/coding/newsflash/app/gui/main.cpp",
		"//home/samiv/coding/newsflash/engine/unit_test/unit_test_cmdlist.cpp",
		"//home/samiv/coding/newsflash/engine/cmdlist.h",
		"//home/samiv/coding/newsflash/engine/buffer.h",
		"//home/samiv/coding/newsflash/engine/nntp.h",
		"//home/samiv/coding/newsflash/engine/datafile.h",
		"//home/samiv/coding/newsflash/engine/engine.h",
		"//home/samiv/coding/newsflash/engine/connection.cpp",
		"//home/samiv/coding/newsflash/app/gui/coremodule.cpp",
		"//home/samiv/test.c",
		"//home/samiv/coding/newsflash/engine/bodylist.h",
		"//home/samiv/coding/newsflash/engine/account.h",
		"//home/samiv/coding/newsflash/engine/bodylist.cpp",
		"//home/samiv/coding/newsflash/engine/ui/task.h",
		"//home/samiv/coding/newsflash/engine/include/c++/4.9.1/bits/predefined_ops.h",
		"//home/samiv/coding/newsflash/engine/connection.h",
		"//home/samiv/coding/newsflash/app/engine.h",
		"//home/samiv/coding/newsflash/app/gui/nzbfile.cpp",
		"//home/samiv/coding/newsflash/app/gui/downloads.h",
		"//home/samiv/coding/newsflash/app/platform.cpp",
		"//home/samiv/coding/newsflash/app/netman.cpp",
		"//home/samiv/coding/newsflash/app/feedback.cpp",
		"//home/samiv/coding/newsflash/app/feedback.h",
		"//home/samiv/coding/newsflash/app/tasklist.h",
		"//home/samiv/coding/newsflash/app/distdir.h",
		"//home/samiv/coding/newsflash/app/distdir.cpp",
		"//home/samiv/coding/newsflash/app/connlist.h",
		"//home/samiv/coding/newsflash/engine/filesys.h",
		"//home/samiv/coding/newsflash/engine/filesys.cpp",
		"//home/samiv/coding/newsflash/engine/ui/connection.h",
		"//home/samiv/coding/newsflash/app/netman.h",
		"//home/samiv/coding/newsflash/app/gui/qtsingleapplication/qtsingleapplication.cpp",
		"//home/samiv/coding/newsflash/app/gui/dlgabout.h",
		"//home/samiv/coding/newsflash/app/gui/dlgfeedback.h",
		"//home/samiv/coding/newsflash/app/telephone.h",
		"//home/samiv/coding/newsflash/app/gui/mainwindow.h",
		"//home/samiv/coding/newsflash/keygen/keygen.h",
		"//home/samiv/coding/newsflash/app/telephone.cpp",
		"//home/samiv/coding/newsflash/engine/unit_test/unit_test_session.cpp",
		"//home/samiv/coding/newsflash/engine/unit_test/unit_test_connection.cpp",
		"//home/samiv/coding/newsflash/app/gui/nzbfile.h",
		"//home/samiv/coding/newsflash/app/nzbfile.cpp",
		"//home/samiv/coding/newsflash/engine/unit_test/unit_test_common.h",
		"//home/samiv/coding/newsflash/app/eventlog.cpp",
		"//home/samiv/coding/newsflash/app/media.h",
		"//home/samiv/coding/newsflash/app/eventlog.h",
		"//home/samiv/coding/newsflash/app/gui/eventlog.cpp",
		"//home/samiv/coding/newsflash/app/gui/nzbcore.h",
		"//home/samiv/coding/newsflash/app/nzbfile.h",
		"//home/samiv/coding/newsflash/app/connlist.cpp",
		"//home/samiv/coding/newsflash/app/nzbparse.h",
		"//home/samiv/coding/newsflash/app/gui/nzbcore.cpp",
		"//home/samiv/coding/newsflash/engine/decode.h",
		"//home/samiv/coding/newsflash/engine/unit_test/unit_test_download.cpp",
		"//home/samiv/coding/newsflash/engine/speedometer.h",
		"//home/samiv/coding/newsflash/engine/unit_test/unit_test_speedometer.cpp",
		"//home/samiv/coding/newsflash/test_float.h",
		"//home/samiv/coding/newsflash/test_minimal.h",
		"//home/samiv/coding/newsflash/engine/yenc.h",
		"//home/samiv/coding/newsflash/engine/unit_test/unit_test_nntp.cpp",
		"//home/samiv/coding/newsflash/engine/nntp.cpp",
		"//home/samiv/coding/newsflash/engine/unit_test/unit_test_decode.cpp",
		"//home/samiv/coding/newsflash/engine/bigfile.h",
		"//home/samiv/coding/newsflash/engine/encoding.h",
		"//home/samiv/coding/newsflash/engine/decode.cpp",
		"//home/samiv/coding/newsflash/engine/bodyiter.h",
		"//home/samiv/coding/newsflash/engine/action.h",
		"//home/samiv/coding/newsflash/engine/bitflag.h",
		"//home/samiv/coding/newsflash/engine/unit_test/include/c++/4.9.1/ext/new_allocator.h",
		"//home/samiv/coding/newsflash/engine/unit_test/unit_test_bodylist.cpp",
		"//home/samiv/coding/newsflash/engine/types.h",
		"//home/samiv/coding/newsflash/engine/encoding.cpp",
		"//home/samiv/coding/newsflash/app/gui/dlgshutdown.h",
		"//home/samiv/coding/newsflash/www/callhome.php"
	],
	"find":
	{
		"height": 0.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"translation_index",
			"wordguid",
			"indices",
			"store",
			"shortcut",
			"eraseHistory",
			"open(",
			"shutdown",
			"resume(",
			"absolute",
			"find",
			"ico_cancel",
			"folder",
			"trash",
			"trah",
			"clear",
			"license",
			"feature",
			"recycle",
			"next",
			"fill_account",
			"utf8",
			"set_file_callback",
			"set_error_callback",
			"enable_fill",
			"fill_",
			"fill",
			"unavailable",
			".head(",
			"eta",
			"execute(",
			"erase(",
			"cmds.erase",
			"resume(",
			"speed",
			"resume(",
			"execute(",
			"connect()",
			"connect(",
			"connect()",
			"connect(",
			"new conn",
			"connect(",
			"pump(",
			"fill_",
			"message",
			"completion(",
			"completion",
			"find_batch",
			"update_completion",
			"batch.update(",
			"set_log_path",
			"stop()",
			"_1",
			"WHO_KNOWS",
			"WHO_",
			"who_knows",
			"damaged",
			"run(",
			"tick(",
			"bytes_ready",
			"progress",
			"bytes_queued",
			"openurl",
			"TaskOpenLog",
			"get_bytes_downloa",
			"connDelete",
			"disconnected",
			"start(",
			"connect(",
			"start(",
			"token",
			"url",
			"parse_next",
			"ready",
			"submit_next_commands",
			"Settings",
			"settings",
			"download_selected",
			"download_nzb_content",
			"g_engine->",
			"accept",
			"nzbfile",
			"kill",
			".connect(",
			"bps",
			"speed",
			"pipelining",
			"bps",
			"pipelining",
			"pipeline_",
			"tick(",
			"pipelining",
			"enable_pipelining",
			"yenc",
			"find_filename",
			"cmdlist",
			"get_buffers",
			"New",
			"pump(",
			"tick(",
			"bps",
			"connect()",
			"throw",
			"conn_logger",
			"complete",
			"size{",
			"dama",
			"get_free_disk_space",
			"actionSetting",
			"other_version",
			"current_version",
			"alive",
			"set_affinity",
			"new download",
			"execute",
			"dele",
			"shutdown",
			"savestate(",
			"shutdown(",
			"saveState",
			"DlgShutdown",
			"connect(",
			"savestate",
			"cancel",
			"begin_connect",
			"TICK(",
			"logger"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"feeds_settings_page",
			"widget->",
			"widget ",
			"sdk::widget",
			"invoke",
			"settings",
			"MainWindow",
			"mainapp",
			"eventlog",
			"valuestore",
			"TinyGraph",
			"sdk::",
			"PASS",
			"thread_submits",
			"task::state::",
			"task_state_machine",
			"connection::",
			"LOG"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "mainwindow.h",
					"settings":
					{
						"buffer_size": 2263,
						"regions":
						{
						},
						"selection":
						[
							[
								1893,
								1893
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 252.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "dictionary.h",
					"settings":
					{
						"buffer_size": 2701,
						"regions":
						{
						},
						"selection":
						[
							[
								2424,
								2424
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 294.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "dlgdictionary.h",
					"settings":
					{
						"buffer_size": 1984,
						"regions":
						{
						},
						"selection":
						[
							[
								1840,
								1840
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 168.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 3,
					"file": "dictionary.cpp",
					"settings":
					{
						"buffer_size": 4513,
						"regions":
						{
						},
						"selection":
						[
							[
								3566,
								3566
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1410.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "mainwindow.cpp",
					"settings":
					{
						"buffer_size": 6486,
						"regions":
						{
						},
						"selection":
						[
							[
								5418,
								5418
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2170.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "resource.qrc",
					"settings":
					{
						"buffer_size": 317,
						"regions":
						{
						},
						"selection":
						[
							[
								317,
								317
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "dlgdictionary.cpp",
					"settings":
					{
						"buffer_size": 6310,
						"regions":
						{
						},
						"selection":
						[
							[
								3635,
								3635
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1344.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.394270833333,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.clang":
	{
		"height": 154.0
	},
	"output.exec":
	{
		"height": 94.0
	},
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 150.0,
	"status_bar_visible": true
}
